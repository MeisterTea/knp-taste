!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	0	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/45968eff/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
root	.eslintrc.js	/^  'root': true,$/;"	p	class:module.exports
node	.eslintrc.js	/^    'node': true,$/;"	p	class:module.exports.env
es6	.eslintrc.js	/^    'es6': true$/;"	p	class:module.exports.env
env	.eslintrc.js	/^  'env': {$/;"	c	class:module.exports
plugins	.eslintrc.js	/^  "plugins": [$/;"	p	class:module.exports
parser	.eslintrc.js	/^  'parser': 'babel-eslint',$/;"	p	class:module.exports
extends	.eslintrc.js	/^  "extends": [$/;"	p	class:module.exports
indent	.eslintrc.js	/^    "indent": ["error", 2, {"SwitchCase": 1, "ignoredNodes": ["JSXElement"]}],$/;"	p	class:module.exports.rules
react/jsx-indent	.eslintrc.js	/^    "react\/jsx-indent": ["error", 2],$/;"	p	class:module.exports.rules
brace-style	.eslintrc.js	/^    'brace-style': ['error'],$/;"	p	class:module.exports.rules
curly	.eslintrc.js	/^    'curly': ['error', 'multi-line'],$/;"	p	class:module.exports.rules
quotes	.eslintrc.js	/^    'quotes': ['error', 'single'],$/;"	p	class:module.exports.rules
key-spacing	.eslintrc.js	/^    'key-spacing': [2, { beforeColon: false, afterColon: true }],$/;"	p	class:module.exports.rules
comma-dangle	.eslintrc.js	/^    'comma-dangle': ['error', 'never'],$/;"	p	class:module.exports.rules
object-curly-spacing	.eslintrc.js	/^    'object-curly-spacing': ['error', 'always'],$/;"	p	class:module.exports.rules
semi	.eslintrc.js	/^    'semi': ['error', 'never'],$/;"	p	class:module.exports.rules
react/jsx-curly-spacing	.eslintrc.js	/^    "react\/jsx-curly-spacing": [2, {"when": "always", "allowMultiline": false}],$/;"	p	class:module.exports.rules
react/jsx-max-props-per-line	.eslintrc.js	/^    'react\/jsx-max-props-per-line': [1, { "maximum": 1 }],$/;"	p	class:module.exports.rules
no-console	.eslintrc.js	/^    'no-console': process.env.NODE_ENV === 'production' ? 'error' : 'off',$/;"	p	class:module.exports.rules
no-debugger	.eslintrc.js	/^    'no-debugger': process.env.NODE_ENV === 'production' ? 'error' : 'off'$/;"	p	class:module.exports.rules
rules	.eslintrc.js	/^  'rules': {$/;"	c	class:module.exports
parser	.eslintrc.js	/^    'parser': 'babel-eslint',$/;"	p	class:module.exports.parserOptions
sourceType	.eslintrc.js	/^    'sourceType': "module",$/;"	p	class:module.exports.parserOptions
ecmaVersion	.eslintrc.js	/^    'ecmaVersion': 10,$/;"	p	class:module.exports.parserOptions
jsx	.eslintrc.js	/^      'jsx': true,$/;"	p	class:module.exports.parserOptions.ecmaFeatures
modules	.eslintrc.js	/^      'modules': true,$/;"	p	class:module.exports.parserOptions.ecmaFeatures
experimentalObjectRestSpread	.eslintrc.js	/^      'experimentalObjectRestSpread': true$/;"	p	class:module.exports.parserOptions.ecmaFeatures
ecmaFeatures	.eslintrc.js	/^    'ecmaFeatures': {$/;"	c	class:module.exports.parserOptions
parserOptions	.eslintrc.js	/^  'parserOptions': {$/;"	c	class:module.exports
pragma	.eslintrc.js	/^      'pragma': 'React',$/;"	p	class:module.exports.settings.react
version	.eslintrc.js	/^      'version': '15.6.1'$/;"	p	class:module.exports.settings.react
react	.eslintrc.js	/^    'react': {$/;"	c	class:module.exports.settings
settings	.eslintrc.js	/^  'settings': {$/;"	c	class:module.exports
exports	.eslintrc.js	/^module.exports = {$/;"	c	class:module
extends	.stylelintrc.js	/^    "extends": [$/;"	p	class:module.exports
font-family-no-missing-generic-family-keyword	.stylelintrc.js	/^        "font-family-no-missing-generic-family-keyword": null,$/;"	p	class:module.exports.rules
no-descending-specificity	.stylelintrc.js	/^        "no-descending-specificity": null,$/;"	p	class:module.exports.rules
color-hex-length	.stylelintrc.js	/^        "color-hex-length": null,$/;"	p	class:module.exports.rules
selector-list-comma-newline-after	.stylelintrc.js	/^        "selector-list-comma-newline-after": "always-multi-line",$/;"	p	class:module.exports.rules
selector-list-comma-space-after	.stylelintrc.js	/^        "selector-list-comma-space-after": "always-single-line",$/;"	p	class:module.exports.rules
block-closing-brace-newline-before	.stylelintrc.js	/^        "block-closing-brace-newline-before": "always",$/;"	p	class:module.exports.rules
declaration-block-semicolon-newline-after	.stylelintrc.js	/^        "declaration-block-semicolon-newline-after": "always",$/;"	p	class:module.exports.rules
value-list-comma-newline-before	.stylelintrc.js	/^        "value-list-comma-newline-before": "never-multi-line",$/;"	p	class:module.exports.rules
value-list-comma-newline-after	.stylelintrc.js	/^        "value-list-comma-newline-after": "always"$/;"	p	class:module.exports.rules
rules	.stylelintrc.js	/^    "rules": {$/;"	c	class:module.exports
exports	.stylelintrc.js	/^module.exports = {$/;"	c	class:module
AppNavigator	navigation/AppNavigator.js	/^const AppNavigator = createStackNavigator({$/;"	C
KNP Taste guidelines	README.md	/^# KNP Taste guidelines$/;"	c
Expected features	README.md	/^## Expected features$/;"	s
Minimal scenarios that has to be covered	README.md	/^### Minimal scenarios that has to be covered$/;"	S
Other ideas	README.md	/^### Other ideas$/;"	S
Expected delivery	README.md	/^## Expected delivery$/;"	s
To begin	README.md	/^## To begin$/;"	s
Icing on the cake	README.md	/^## Icing on the cake$/;"	s
General reccomandations	README.md	/^## General reccomandations$/;"	s
name	app.json	/^    "name": "Knp Taste",$/;"	s	object:expo
slug	app.json	/^    "slug": "knp-taste",$/;"	s	object:expo
privacy	app.json	/^    "privacy": "public",$/;"	s	object:expo
sdkVersion	app.json	/^    "sdkVersion": "32.0.0",$/;"	s	object:expo
0	app.json	/^      "ios",$/;"	s	array:expo.platforms
1	app.json	/^      "android"$/;"	s	array:expo.platforms
platforms	app.json	/^    "platforms": [$/;"	a	object:expo
version	app.json	/^    "version": "1.0.0",$/;"	s	object:expo
orientation	app.json	/^    "orientation": "portrait",$/;"	s	object:expo
icon	app.json	/^    "icon": ".\/assets\/images\/icon.png",$/;"	s	object:expo
image	app.json	/^      "image": ".\/assets\/images\/splash.png",$/;"	s	object:expo.splash
resizeMode	app.json	/^      "resizeMode": "contain",$/;"	s	object:expo.splash
backgroundColor	app.json	/^      "backgroundColor": "#ffffff"$/;"	s	object:expo.splash
splash	app.json	/^    "splash": {$/;"	o	object:expo
fallbackToCacheTimeout	app.json	/^      "fallbackToCacheTimeout": 0$/;"	n	object:expo.updates
updates	app.json	/^    "updates": {$/;"	o	object:expo
0	app.json	/^      "**\/*"$/;"	s	array:expo.assetBundlePatterns
assetBundlePatterns	app.json	/^    "assetBundlePatterns": [$/;"	a	object:expo
supportsTablet	app.json	/^      "supportsTablet": true$/;"	b	object:expo.ios
ios	app.json	/^    "ios": {$/;"	o	object:expo
expo	app.json	/^  "expo": {$/;"	o
store	store/index.js	/^const store = createStore(rootReducer)$/;"	C
tintColor	constants/Colors.js	/^const tintColor = '#2f95dc';$/;"	C
width	constants/Layout.js	/^const width = Dimensions.get('window').width;$/;"	C
height	constants/Layout.js	/^const height = Dimensions.get('window').height;$/;"	C
TitledTextInput	components/atoms/TitledTextInput.js	/^export default function TitledTextInput(props) {$/;"	f
title	components/atoms/TitledTextInput.js	/^  title: PropTypes.string.isRequired,$/;"	p	class:TitledTextInput.propTypes
value	components/atoms/TitledTextInput.js	/^  value: PropTypes.string.isRequired,$/;"	p	class:TitledTextInput.propTypes
onChangeText	components/atoms/TitledTextInput.js	/^  onChangeText: PropTypes.func.isRequired$/;"	p	class:TitledTextInput.propTypes
propTypes	components/atoms/TitledTextInput.js	/^TitledTextInput.propTypes = {$/;"	c	class:TitledTextInput
styles	components/atoms/TitledTextInput.js	/^const styles = StyleSheet.create({$/;"	C
EditTodoScreen	screens/TodoEditor.js	/^export default class EditTodoScreen extends Component {$/;"	c
styles	screens/TodoEditor.js	/^const styles = StyleSheet.create({$/;"	C
devToolsPort	.expo/packager-info.json	/^  "devToolsPort": 19002,$/;"	n
expoServerPort	.expo/packager-info.json	/^  "expoServerPort": 19000,$/;"	n
packagerPort	.expo/packager-info.json	/^  "packagerPort": 19001,$/;"	n
packagerPid	.expo/packager-info.json	/^  "packagerPid": 4113,$/;"	n
expoServerNgrokUrl	.expo/packager-info.json	/^  "expoServerNgrokUrl": "https:\/\/cx-bd3.anonymous.knp-taste.exp.direct",$/;"	s
packagerNgrokUrl	.expo/packager-info.json	/^  "packagerNgrokUrl": "https:\/\/packager.cx-bd3.anonymous.knp-taste.exp.direct",$/;"	s
ngrokPid	.expo/packager-info.json	/^  "ngrokPid": 4307$/;"	n
hostType	.expo/settings.json	/^  "hostType": "lan",$/;"	s
lanType	.expo/settings.json	/^  "lanType": "ip",$/;"	s
dev	.expo/settings.json	/^  "dev": true,$/;"	b
minify	.expo/settings.json	/^  "minify": false,$/;"	b
urlRandomness	.expo/settings.json	/^  "urlRandomness": "cx-bd3"$/;"	s
App	App.js	/^export default class App extends Component {$/;"	c
styles	App.js	/^const styles = StyleSheet.create({$/;"	C
exports	babel.config.js	/^module.exports = function(api) {$/;"	f	function:module
main	package.json	/^  "main": "node_modules\/expo\/AppEntry.js",$/;"	s
start	package.json	/^    "start": "expo start",$/;"	s	object:scripts
android	package.json	/^    "android": "expo start --android",$/;"	s	object:scripts
ios	package.json	/^    "ios": "expo start --ios",$/;"	s	object:scripts
eject	package.json	/^    "eject": "expo eject",$/;"	s	object:scripts
test	package.json	/^    "test": "node .\/node_modules\/jest\/bin\/jest.js --watchAll"$/;"	s	object:scripts
scripts	package.json	/^  "scripts": {$/;"	o
preset	package.json	/^    "preset": "jest-expo"$/;"	s	object:jest
jest	package.json	/^  "jest": {$/;"	o
@expo/samples	package.json	/^    "@expo\/samples": "2.1.1",$/;"	s	object:dependencies
expo	package.json	/^    "expo": "^32.0.0",$/;"	s	object:dependencies
react	package.json	/^    "react": "16.5.0",$/;"	s	object:dependencies
react-native	package.json	/^    "react-native": "https:\/\/github.com\/expo\/react-native\/archive\/sdk-32.0.0.tar.gz",$/;"	s	object:dependencies
react-navigation	package.json	/^    "react-navigation": "^3.0.9",$/;"	s	object:dependencies
react-redux	package.json	/^    "react-redux": "^6.0.0",$/;"	s	object:dependencies
redux	package.json	/^    "redux": "^4.0.1"$/;"	s	object:dependencies
dependencies	package.json	/^  "dependencies": {$/;"	o
babel-eslint	package.json	/^    "babel-eslint": "^10.0.1",$/;"	s	object:devDependencies
babel-preset-expo	package.json	/^    "babel-preset-expo": "^5.0.0",$/;"	s	object:devDependencies
eslint-plugin-babel	package.json	/^    "eslint-plugin-babel": "^5.3.0",$/;"	s	object:devDependencies
eslint-plugin-react	package.json	/^    "eslint-plugin-react": "^7.12.4",$/;"	s	object:devDependencies
eslint_d	package.json	/^    "eslint_d": "^7.2.0",$/;"	s	object:devDependencies
jest-expo	package.json	/^    "jest-expo": "^32.0.0",$/;"	s	object:devDependencies
stylelint	package.json	/^    "stylelint": "^9.10.1",$/;"	s	object:devDependencies
stylelint-config-recess-order	package.json	/^    "stylelint-config-recess-order": "^2.0.1",$/;"	s	object:devDependencies
stylelint-config-standard	package.json	/^    "stylelint-config-standard": "^18.2.0"$/;"	s	object:devDependencies
devDependencies	package.json	/^  "devDependencies": {$/;"	o
private	package.json	/^  "private": true$/;"	b
addTodo	store/actions/todo.js	/^export const addTodo = ({ title, content }) => ({$/;"	C
removeTodo	store/actions/todo.js	/^export const removeTodo = id => ({$/;"	C
ADD_TODO	store/constants/todo.js	/^export const ADD_TODO = 'ADD_TODO'$/;"	C
REMOVE_TODO	store/constants/todo.js	/^export const REMOVE_TODO = 'REMOVE_TODO'$/;"	C
Todo	components/Todo.js	/^export default function Todo({ onPress, title, content }) {$/;"	f
onPress	components/Todo.js	/^  onPress: PropTypes.func.isRequired,$/;"	p	class:Todo.propTypes
title	components/Todo.js	/^  title: PropTypes.string.isRequired,$/;"	p	class:Todo.propTypes
content	components/Todo.js	/^  content: PropTypes.string.isRequired$/;"	p	class:Todo.propTypes
propTypes	components/Todo.js	/^Todo.propTypes = {$/;"	c	class:Todo
INITIAL_STATE	store/reducers/todoReducer.js	/^const INITIAL_STATE = [$/;"	C
todos	store/reducers/todoReducer.js	/^const todos = (state = INITIAL_STATE, action) => {$/;"	C
id	store/reducers/todoReducer.js	/^      const id = state.todos.length + 1$/;"	C
TodoList	components/TodoList.js	/^const TodoList = ({ todos }) => todos.map(todo => {$/;"	C
openTodoEditor	screens/HomeScreen.js	/^const openTodoEditor = navigation => {$/;"	C
HomeScreen	screens/HomeScreen.js	/^const HomeScreen = ({ navigation, todos }) => ($/;"	C
mapStateToProps	screens/HomeScreen.js	/^const mapStateToProps = state => ({$/;"	C
